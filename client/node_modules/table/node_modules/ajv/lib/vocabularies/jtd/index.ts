import type {Vocabulary} from "../../types"
import discriminator, { JTDDiscriminatorError } from './discriminator';
import elements, { JTDElementsError } from './elements';
import enumKeyword, { JTDEnumError } from './enum';
import metadata from './metadata';
import optionalProperties from './optionalProperties';
import properties, { JTDPropertiesError } from './properties';
import refKeyword from './ref';
import typeKeyword, { JTDTypeError } from './type';
import union from './union';
import values, { JTDValuesError } from './values';

const jtdVocabulary: Vocabulary = [
  "definitions",
  refKeyword,
  typeKeyword,
  enumKeyword,
  elements,
  properties,
  optionalProperties,
  discriminator,
  values,
  union,
  metadata,
  {keyword: "additionalProperties", schemaType: "boolean"},
  {keyword: "nullable", schemaType: "boolean"},
]

export default jtdVocabulary

export type JTDErrorObject =
  | JTDTypeError
  | JTDEnumError
  | JTDElementsError
  | JTDPropertiesError
  | JTDDiscriminatorError
  | JTDValuesError
